---
export interface Props {
  class?: string
  target?: string
  flat?: boolean
}

const { class: className, flat, ...rest } = Astro.props
---

<e-popover-button
  {...rest}
  class:list={[className, 'dots-button']}
  data-flat={flat}
>
  <div class="dots-button__dot dots-button__dot_1"></div>
  <div class="dots-button__dot dots-button__dot_2"></div>
  <div class="dots-button__dot dots-button__dot_3"></div>
</e-popover-button>

<style is:global>
  .dots-button {
    display: flex;
    align-items: center;
    justify-content: center;

    &:not([data-flat='true']) {
      --gap: 1rem;

      width: 5.5rem;
      height: var(--dots-button-height, 4.5rem);

      background-color: var(--color-grayscale-0);
      border-radius: 3rem;

      @media (max-width: 768px) {
        height: var(--dots-button-height, 4rem);
      }
    }

    &[data-flat='true'] {
      --gap: 1rem;
      width: 2.3rem;
      height: 2.3rem;

      @media (max-width: 768px) {
        --gap: 0.7rem;
        width: 1.4rem;
        height: 1.4rem;
      }
    }
  }

  .dots-button__dot {
    --opened: 0;
    --shown: 1;

    position: absolute;

    width: 2rem;
    height: 0.383rem;

    border-radius: calc(50% * (1 - var(--opened)) + 1rem * var(--opened));
    background-color: var(--color-grayscale-600);

    transform: translateX(calc((var(--gap)) * var(--dir) * (1 - var(--opened))))
      rotate(calc(45deg * var(--opened) * var(--dir)))
      scaleX(calc((0.2 * var(--shown)) + 0.8 * var(--opened) * var(--shown)))
      scaleY(calc(1 - 0.4 * var(--opened)));

    transition-property: transform;
    transition-duration: var(--duration-button);
    transition-timing-function: ease;

    @media (max-width: 768px) {
      width: 1.6rem;
      height: 0.3rem;
    }

    .dots-button.opened & {
      --opened: 1;
    }
  }

  .dots-button__dot_1 {
    --dir: -1;
  }

  .dots-button__dot_2 {
    --dir: 0;

    .dots-button.opened & {
      --shown: 0;
    }
  }

  .dots-button__dot_3 {
    --dir: 1;
  }
</style>
