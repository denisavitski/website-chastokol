---
import type { ImageDataProps } from './Image.astro'
import Image from './Image.astro'
import PlayButton from './PlayButton.astro'

export interface Props {
  class?: string
  name?: string
  short?: string
  stats?: Array<{ title: string; value: string }>
  image?: ImageDataProps
}

const {
  class: className,
  name = 'Татьяна Дмитриева',
  short = '«Отличная компания, все сделали быстро, качественно и в срок»',
  stats = [
    {
      title: 'Материал:',
      value: 'Евроштакетник',
    },
    {
      title: 'Срок установки:',
      value: '3 дня',
    },
    {
      title: 'Стоимость:',
      value: '60 000 руб.',
    },
  ],
  image = {
    src: '/images/video-reviews/image.jpg',
  },
  ...rest
} = Astro.props
---

<div
  {...rest}
  class:list={[className, 'video-review-card']}
>
  <div class="video-review-card__content">
    <div
      class="video-review-card__name f-d-title-medium-24 f-m-body-large-medium-16"
      set:html={name}
    />
    <div
      class="video-review-card__description f-d-body-large-medium-16 f-m-body-basic-medium-14"
      set:html={short}
    />
    <div class="video-review-card__stats">
      {
        stats.map((stat) => {
          return (
            <div class="video-review-card__stat">
              <div
                class="video-review-card__stat__title f-d-body-large-regular-16 f-m-body-basic-regular-14"
                set:html={stat.title}
              />
              <div
                class="video-review-card__stat__value f-d-body-large-medium-16 f-m-body-basic-medium-14"
                set:html={stat.value}
              />
            </div>
          )
        })
      }
    </div>
  </div>
  <div class="video-review-card__image-box">
    <Image
      {...image}
      lazy
      lazyBackground
      cover
      class="video-review-card__image"
    />
    <PlayButton class="video-review-card__play-button" />
  </div>
</div>

<style is:global>
  .video-review-card {
    --min-height: 38.7rem;

    width: 72.5rem;
    min-height: 38.7rem;

    display: flex;

    overflow: hidden;
    border-radius: 2rem;

    background-color: var(--color-grayscale-0);

    @media (max-width: 768px) {
      width: 26rem;

      min-height: unset;

      flex-direction: column-reverse;

      border-radius: 1.5rem;
    }
  }

  .video-review-card__content {
    display: flex;
    flex-direction: column;

    padding: 3rem;
    border: 0.1rem solid var(--color-grayscale-300);

    @media (min-width: 769px) {
      border-top-left-radius: 2rem;
      border-bottom-left-radius: 2rem;
    }

    @media (max-width: 768px) {
      margin-top: -1.5rem;

      padding: 1.5rem;
      padding-top: 3rem;

      border-bottom-left-radius: 1.5rem;
      border-bottom-right-radius: 1.5rem;
    }
  }

  .video-review-card__name {
    margin-bottom: 1.9rem;

    color: var(--color-primary-100);

    @media (max-width: 768px) {
      margin-bottom: 1.3rem;
    }
  }

  .video-review-card__description {
    margin-bottom: 3rem;
  }

  .video-review-card__stats {
    margin-top: auto;

    display: grid;
    gap: 0.6rem;

    @media (max-width: 768px) {
      gap: 0.3rem;
    }
  }

  .video-review-card__stat {
    display: inline-flex;
    gap: 1ch;
  }

  .video-review-card__stat__title {
    color: var(--color-grayscale-400);
  }

  .video-review-card__stat__value {
  }

  .video-review-card__image-box {
    flex-shrink: 0;
    width: 33.7rem;
    min-height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;

    @media (max-width: 768px) {
      width: 100%;
      height: 30rem;
      min-height: unset;
      border-radius: 1.5rem;
    }
  }

  .video-review-card__image {
    width: 100%;
    height: 100%;
  }

  .video-review-card__play-button {
    position: absolute;
    z-index: 1;
  }
</style>
