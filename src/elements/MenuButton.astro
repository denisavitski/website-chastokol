---
export interface Props {
  class?: string
}

const { class: className, ...rest } = Astro.props
---

<e-popover-button
  {...rest}
  class:list={[className, 'menu-button']}
  target="menu"
>
  <div class="menu-button__icon"></div>

  <div
    class="menu-button__name f-d-body-large-medium-16 f-d-body-basic-medium-14"
  >
    <div class="menu-button__name__desktop">Каталог</div>
    <div class="menu-button__name__mobile">Меню</div>
  </div>
</e-popover-button>

<style is:global>
  .menu-button {
    --color: var(--color-grayscale-600);
    padding: 0 1.5rem;
    height: 3.7rem;

    display: inline-flex;
    align-items: center;
    gap: 1.08rem;

    border-radius: 3rem;
    background-color: var(--color-grayscale-0);

    transition: background-color var(--duration-button);

    &.opened {
      --color: var(--color-grayscale-0);
      background-color: var(--color-primary-100);
    }
  }

  .menu-button__icon {
    position: relative;

    width: 1.92rem;
    height: 1.92rem;

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

    &::before,
    &::after {
      content: '';

      position: absolute;

      width: 100%;
      height: 0.16rem;
      border-radius: 1rem;
      background-color: var(--color);

      transition:
        background-color var(--duration-button),
        transform var(--duration-button);
    }

    &::before {
      transform: translateY(-0.2rem) rotate(0);
    }

    &::after {
      transform: translateY(0.2rem) rotate(0);
    }

    .menu-button.opened &::before {
      transform: translateY(0) rotate(45deg);
    }

    .menu-button.opened &::after {
      transform: translateY(0) rotate(-45deg);
    }
  }

  .menu-button__name {
    transition: color var(--duration-button);

    color: var(--color);
  }

  .menu-button__name__desktop {
    @media (max-width: 768px) {
      display: none;
    }
  }

  .menu-button__name__mobile {
    @media (min-width: 769px) {
      display: none;
    }
  }
</style>
