---
import Icon from './Icon.astro'

export interface Props {
  class?: string
  type?: 'prev' | 'next'
  center?: boolean
  onlyDesktop?: boolean
}

const {
  class: className,
  type = 'next',
  center,
  onlyDesktop = true,
  ...rest
} = Astro.props
---

<e-scroll-step-button
  {...rest}
  class:list={['slider-button', className]}
  data-type={type}
  data-center={center}
  data-only-desktop={onlyDesktop}
  slot="static"
>
  <Icon
    name={'tailless-arrow'}
    class="slider-button__arrow"
  />
</e-scroll-step-button>

<style is:global>
  .slider-button {
    display: none;
    align-items: center;
    justify-content: center;

    width: var(--slider-button-size, 3.8rem);
    height: var(--slider-button-size, 3.8rem);

    background-color: var(--slider-button-color, var(--color-grayscale-0));
    border-radius: 50%;

    transition: opacity var(--duration-button);

    user-select: none;

    [data-white-background='true'] & {
      background-color: var(--slider-button-color, var(--color-grayscale-200));
    }

    .has-overflow & {
      display: inline-flex;
    }

    @media (max-width: 768px) {
      &[data-only-desktop='true'] {
        display: none !important;
      }
    }

    &[data-type='prev'] {
      --step: -1;
      scale: -1;
    }

    &[data-type='next'] {
      --step: 1;
      scale: 1;
    }

    &[data-center='true'][data-type='prev'],
    &[data-center='true'][data-type='next'] {
      position: absolute;
      top: 50%;
      translate: 0% -50%;
    }

    &[data-center='true'][data-type='prev'] {
      right: calc(100% + 5rem);
    }

    &[data-center='true'][data-type='next'] {
      left: calc(100% + 5rem);
    }

    &[disabled] {
      opacity: var(--disabled-opacity, 0.3);
    }

    &[disabled] {
      opacity: var(--disabled-opacity, 0.3);
    }
  }

  .slider-button__arrow {
    width: 53%;
    height: 53%;

    fill: var(--color-grayscale-600);
    transform: translateX(10%);
  }
</style>
