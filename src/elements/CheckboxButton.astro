---
import Icon from './Icon.astro'

export interface Props {
  class?: string
  type?: 'checkbox' | 'radio'
  name?: string
  value?: string
  font?: string
  disabled?: boolean
  checked?: boolean | undefined
}

const {
  class: className,
  type = 'checkbox',
  name,
  value = 'Value',
  font = 'f-d-body-large-regular-16 f-m-body-basic-regular-14',
  disabled,
  checked,
  ...rest
} = Astro.props
---

<label
  {...rest}
  class:list={[font, className, 'checkbox']}
>
  <input
    class="visually-hidden checkbox__input"
    type={type}
    {disabled}
    {name}
    {value}
    {checked}
  />

  <span class="checkbox__content">
    <span class="checkbox__icon-box">
      <Icon
        class="checkbox__icon-box__icon"
        name={type === 'checkbox' ? 'check' : 'circle'}
      />
    </span>
    {
      name && (
        <span
          class="checkbox__title"
          set:html={value}
        />
      )
    }
  </span>
</label>

<style is:global>
  .checkbox {
    position: relative;

    user-select: none;
  }

  .checkbox__input {
  }

  .checkbox__content {
    display: inline-flex;
    align-items: center;
    gap: 1.5rem;

    cursor: pointer;

    .checkbox__input:disabled ~ & {
      cursor: default;
    }

    @media (max-width: 768px) {
      gap: 1rem;
    }
  }

  .checkbox__icon-box {
    flex-shrink: 0;

    width: 2rem;
    height: 2rem;

    display: flex;
    align-items: center;
    justify-content: center;

    border: 0.2rem solid var(--color-primary-100);

    .checkbox__input[type='radio'] ~ .checkbox__content & {
      border-radius: 50%;
    }

    .checkbox__input[type='checkbox'] ~ .checkbox__content & {
      border-radius: 0.5rem;
    }

    .checkbox__input[type='checkbox']:checked:not(:disabled)
      ~ .checkbox__content
      & {
      background-color: var(--color-primary-100);
    }

    .checkbox__input:focus:not(:disabled) ~ .checkbox__content & {
      box-shadow: 0rem 0rem 0rem 0.2rem rgba(48, 124, 50, 0.15);
    }

    .checkbox__input:disabled ~ .checkbox__content & {
      border-color: var(--color-button-text);
      box-shadow: 0rem 0rem 0rem 0.2rem #f9f9f9;
    }

    @media (max-width: 768px) {
      width: 1.5rem;
      height: 1.5rem;
    }
  }

  .checkbox__icon-box__icon {
    fill: var(--color-primary-100);

    opacity: 0;

    .checkbox__input[type='checkbox'] ~ .checkbox__content & {
      width: 75%;
      height: 75%;
    }

    .checkbox__input[type='radio'] ~ .checkbox__content & {
      width: 100%;
      height: 100%;
    }

    .checkbox__input:checked:not(:disabled) ~ .checkbox__content & {
      opacity: 1;
    }

    .checkbox__input[type='checkbox']:checked:not(:disabled)
      ~ .checkbox__content
      & {
      fill: var(--color-button-text);
    }
  }

  .checkbox__title {
    color: #121417;

    .checkbox__input:disabled ~ .checkbox__content & {
      color: var(--color-grayscale-400);
    }
  }
</style>
