---
export interface Props {
  class?: string
  state?: 'open' | 'closed' | undefined
}

const { class: className, state = 'open', ...rest } = Astro.props
---

<div
  {...rest}
  class:list={[className, 'open-close-state']}
  data-state={state}
>
  <div class="open-close-state__icon"></div>
  <div
    class="open-close-state__value f-d-body-large-medium-16 f-m-footnote-medium-12"
  >
    {state === 'open' ? 'Открыта' : 'Закрыта'}
  </div>
</div>

<style is:global>
  .open-close-state {
    display: inline-flex;
    align-items: center;
    gap: 1rem;

    height: 3.8rem;
    padding: 0 1.5rem;

    border-radius: 0.7rem;

    &[data-state='open'] {
      background-color: var(--color-primary-100);
    }

    &[data-state='closed'] {
      background-color: #d12c2c;
    }

    @media (max-width: 768px) {
      gap: 0.6rem;

      height: 2.6rem;
      padding: 0 1rem;
    }
  }

  .open-close-state__icon {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;

    width: 1.3rem;
    height: 1.3rem;

    border-radius: 50%;

    will-change: transform;

    &::before {
      content: '';

      position: absolute;

      width: 100%;
      height: 100%;

      background-color: var(--color-grayscale-0);
      border-radius: 50%;

      opacity: 0.3;
    }

    &::after {
      content: '';

      position: absolute;

      width: 69%;
      height: 69%;

      background-color: var(--color-grayscale-0);
      border-radius: 50%;
    }
  }

  .open-close-state__value {
    position: relative;
    color: var(--color-grayscale-0);
  }
</style>
