---
import type { ImageDataProps } from './Image.astro'
import Image from './Image.astro'
import Button from './Button.astro'

export interface Props {
  class?: string | undefined
  href?: string | undefined
  name?: string | undefined
  image?: ImageDataProps | undefined
  button?: boolean | undefined
  tag?: string | undefined
  border?: boolean
}

const {
  class: className,
  href,
  name = 'Заборы',
  image = { src: '/images/catalog-item.png' },
  button = true,
  tag = 'a',
  border = false,
  ...rest
} = Astro.props

const Tag = tag as any
---

<Tag
  {...rest}
  {href}
  class:list={[className, 'catalog-card']}
  data-border={border}
>
  <span class="catalog-card__image-box">
    <Image
      class="catalog-card__image"
      {...image}
    />
    <slot name="image-box" />
  </span>
  <span class="catalog-card__content">
    <span class="catalog-card__top">
      <span
        class="catalog-card__name f-d-title-medium-20 f-m-body-large-medium-16"
        set:html={name}
      />
      {
        button && (
          <Button
            class="catalog-card__link only-arrow"
            tag="span"
            theme={'only-arrow'}
          />
        )
      }
    </span>
    <slot />
  </span>
</Tag>

<style is:global>
  .catalog-card {
    --arrow-size: 3.5rem;

    display: block;

    width: var(--catalog-card-width, 33.7rem);
    border-radius: var(--border-radius);

    @media (max-width: 768px) {
      --arrow-size: 3rem;
      width: var(--catalog-card-width, 20rem);
    }
  }

  .catalog-card__image-box {
    position: relative;

    display: block;

    width: 100%;
    height: var(--catalog-card-image-height, 33.5rem);

    overflow: hidden;

    background-color: var(
      --catalog-card-image-color,
      var(--color-image-background)
    );

    border-radius: var(--border-radius);

    @media (max-width: 768px) {
      height: var(--catalog-card-image-height, 19.8rem);
    }
  }

  .catalog-card__image {
    width: 100%;
    height: 100%;
  }

  .catalog-card__link {
    margin: -0.5rem 0;

    @media (max-width: 768px) {
    }
  }

  .catalog-card__content {
    display: block;
    padding: 2.1rem;
    padding-top: calc(2.1rem + var(--border-radius));
    margin-top: calc(var(--border-radius) * -1);

    .catalog-card[data-border='true'] & {
      border-bottom: 0.1rem solid var(--color-grayscale-300);
      border-left: 0.1rem solid var(--color-grayscale-300);
      border-right: 0.1rem solid var(--color-grayscale-300);
    }

    border-bottom-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);

    background-color: var(--color-grayscale-0);

    @media (max-width: 768px) {
      padding: 1.5rem;
      padding-top: calc(1.5rem + var(--border-radius));
    }
  }

  .catalog-card__top {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
</style>
