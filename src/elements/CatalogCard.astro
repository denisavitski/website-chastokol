---
import type { ImageDataProps } from './Image.astro'
import Image from './Image.astro'
import Button from './Button.astro'
import CardLabel, { type Props as CardLabelProps } from './CardLabel.astro'
import PlayButton from './PlayButton.astro'
import Billboard from './Billboard.astro'

//@ts-ignore
const _ = '_'

export interface Props {
  class?: string | undefined
  href?: string | undefined
  name?: string | undefined
  price?: string | undefined
  image?: ImageDataProps | undefined
  button?: CatalogCardButtonType
  tag?: string | undefined
  labels?: Array<CardLabelProps> | undefined
  description?: string | undefined
  date?: string | undefined
  nameFont?: string | undefined
  theme?:
    | 'category'
    | 'service'
    | 'video'
    | 'subcategory'
    | 'variant'
    | 'article'
    | 'media'
  playButton?: boolean | undefined
  images?: Array<ImageDataProps> | undefined
  video?: string
}

export type CatalogCardButtonType =
  | 'arrow'
  | 'more'
  | 'top-more'
  | undefined
  | false

const {
  class: className,
  href,
  name = 'Заборы',
  price,
  image,
  images,
  labels,
  button,
  tag,
  description,
  date,
  nameFont = 'f-d-title-medium-20 f-m-body-large-medium-16',
  theme,
  playButton,
  video,
  ...rest
} = Astro.props

const isVideoCard = theme === 'video' || video || playButton

const Tag = tag
  ? tag
  : isVideoCard
    ? 'e-popover-button'
    : href
      ? 'a'
      : ('div' as any)

const themedButton: CatalogCardButtonType = button
  ? button
  : theme === 'category'
    ? 'top-more'
    : theme === 'article'
      ? 'more'
      : theme === 'service'
        ? 'arrow'
        : theme === 'subcategory'
          ? false
          : theme === 'variant'
            ? 'more'
            : theme === 'video'
              ? false
              : false

const themedLabels: Array<CardLabelProps> | undefined = labels
  ? labels
  : theme === 'article'
    ? [{ name: 'Статья' }]
    : labels
---

<Tag
  {...rest}
  {href}
  class:list={[className, 'catalog-card']}
  data-theme={theme}
  target={isVideoCard ? 'video-modal' : undefined}
  data-video={video
    ? video
    : isVideoCard
      ? '<iframe width="1337" height="752" src="https://www.youtube.com/embed/F399teRPBaY?autoplay=1" title="Relaxing Night Walk in Kyoto, Yasaka Pagoda, Binaural, City Sounds" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>'
      : undefined}
>
  <span class="catalog-card__image-box">
    {
      image && (
        <Image
          class="catalog-card__image"
          cover
          lazy
          {...image}
        />
      )
    }

    {
      images && (
        <Billboard
          {images}
          class="catalog-card__billboard"
        />
      )
    }

    {
      themedLabels && (
        <div class="catalog-card__labels">
          {themedLabels.map((label) => {
            return <CardLabel {...label} />
          })}
        </div>
      )
    }
    {
      theme === 'video' || playButton ? (
        <PlayButton
          class="catalog-card__play-button"
          slot={'image-box'}
          tag="span"
        />
      ) : null
    }

    <slot name="image-box" />
  </span>
  <span class="catalog-card__content">
    <span class="catalog-card__top">
      <span class="catalog-card__name-box">
        <span
          class:list={['catalog-card__name', nameFont]}
          set:html={name}
        />
        {
          price && (
            <span
              class="catalog-card__price f-d-body-large-medium-16 f-m-footnote-medium-12"
              set:html={price}
            />
          )
        }
      </span>
      {
        (themedButton === 'arrow' || themedButton === 'top-more') && (
          <Button
            class="catalog-card__link"
            tag="span"
            theme={
              themedButton === 'top-more'
                ? 'default-to-only-arrow'
                : 'only-arrow'
            }
            name={'Подробнее'}
          />
        )
      }
    </span>
    {
      description && (
        <span
          class="catalog-card__description f-d-body-large-regular-16 f-m-body-basic-regular-14"
          set:html={description}
        />
      )
    }
    {
      themedButton === 'more' && (
        <Button
          class="catalog-card__more-link"
          tag="span"
          theme={'flat'}
          name="Подробнее"
        />
      )
    }
    {
      date && (
        <div
          class="catalog-card__date f-d-body-large-regular-16 f-m-footnote-regular-12"
          set:html={date}
        />
      )
    }
    <slot />
  </span>
</Tag>

<style is:global>
  .catalog-card {
    display: block;

    width: var(--catalog-card-width, 46.7rem);
    border-radius: var(--border-radius);

    @media (max-width: 768px) {
      width: var(--catalog-card-width, 26rem);
    }

    &[data-theme='category'] {
      --catalog-card-width: 46.7rem;
      --catalog-card-image-height: 46.7rem;

      @media (max-width: 768px) {
        --catalog-card-width: 26rem;
        --catalog-card-image-height: 26rem;
        --arrow-size: 4rem;
      }
    }

    &[data-theme='service'] {
      --catalog-card-width: 33.7rem;
      --catalog-card-image-height: 33.7rem;

      @media (max-width: 768px) {
        --catalog-card-width: 20rem;
        --catalog-card-image-height: 20rem;
      }
    }

    &[data-theme='media'] {
      --catalog-card-width: 72.5rem;
      --catalog-card-image-height: 45rem;

      @media (max-width: 768px) {
        --catalog-card-width: 100%;
        --catalog-card-image-height: 23.5rem;
      }
    }
  }

  .catalog-card__image-box {
    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: var(--catalog-card-image-height, 32.7rem);

    overflow: hidden;

    background-color: var(
      --catalog-card-image-color,
      var(--color-image-background)
    );

    border-radius: var(--border-radius);

    @media (max-width: 768px) {
      height: var(--catalog-card-image-height, 19.8rem);
    }
  }

  .catalog-card__play-button {
    position: absolute;
    z-index: 1;
  }

  .catalog-card__image {
    width: 100%;
    height: 100%;
  }

  .catalog-card__billboard {
    width: 100%;
    height: 100%;

    .catalog-card[data-theme='media'] & {
      .billboard__buton_prev {
        @media (max-width: 768px) {
          left: 2rem;
        }
      }

      .billboard__buton_next {
        @media (max-width: 768px) {
          right: 2rem;
        }
      }
    }
  }

  .catalog-card__link {
    margin: -0.5rem 0;

    &[data-theme='only-arrow'] {
      --arrow-size: 3.5rem;
      @media (max-width: 768px) {
        --arrow-size: 3rem;
      }
    }
  }

  .catalog-card__content {
    display: block;

    padding: 2.1rem;
    padding-top: calc(2.1rem + var(--border-radius));
    margin-top: calc(var(--border-radius) * -1);

    [data-white-background='true'] & {
      border-bottom: 0.1rem solid var(--color-grayscale-300);
      border-left: 0.1rem solid var(--color-grayscale-300);
      border-right: 0.1rem solid var(--color-grayscale-300);
    }

    .catalog-card[data-theme='media'] & {
      padding: 3rem;
      padding-top: calc(3rem + var(--border-radius));
    }

    border-bottom-left-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);

    background-color: var(--color-grayscale-0);

    @media (max-width: 768px) {
      padding: 1.5rem;
      padding-top: calc(1.5rem + var(--border-radius));

      .catalog-card[data-theme='media'] & {
        padding: 2rem;
        padding-top: calc(2rem + var(--border-radius));
      }
    }
  }

  .catalog-card__top {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .catalog-card__name {
    display: block;
  }

  .catalog-card__price {
    display: block;
    margin-top: 0.5rem;
    margin-bottom: 0.8rem;

    color: var(--color-primary-100);

    @media (max-width: 768px) {
      margin-bottom: 0.5rem;
    }

    .catalog-card[data-theme='category'] & {
      margin-top: 0;

      @media (max-width: 768px) {
        margin-top: 0.5rem;
      }
    }
  }

  .catalog-card__labels {
    position: absolute;
    z-index: 1;
    top: 2rem;
    left: 2rem;

    display: flex;
    gap: 1rem;
    flex-wrap: wrap;

    .catalog-card[data-theme='media'] & {
      top: 3rem;
      left: 3rem;
    }

    @media (max-width: 768px) {
      top: 1.5rem;
      left: 1.5rem;

      .catalog-card[data-theme='media'] & {
        top: 2rem;
        left: 2rem;
      }
    }
  }

  .catalog-card__description {
    margin-top: 1.5rem;

    color: var(--color-grayscale-400);

    display: -webkit-box;
    -webkit-line-clamp: 2;
    -moz-box-orient: vertical;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;

    .catalog-card[data-theme='media'] & {
      margin-top: 2rem;

      @media (max-width: 768px) {
        margin-top: 1rem;
      }
    }
  }

  .catalog-card__more-link {
    margin-top: 4rem;

    @media (max-width: 768px) {
      margin-top: 2rem;
    }
  }

  .catalog-card__date {
    margin-top: 5.1rem;

    color: var(--color-grayscale-400);

    @media (max-width: 768px) {
      margin-top: 2.5rem;
    }
  }
</style>
