---
import CircleData, {
  type Props as CircleDataProps,
} from '@elements/CircleData.astro'
import Section, { type Props as SectionProps } from './Section.astro'

export interface Props extends SectionProps {
  heading?: string
  list?: Array<Omit<CircleDataProps, 'theme'>>
  border?: boolean
  theme?: CircleDataProps['theme']
}

const {
  heading = 'Факты и цифры',
  list = [
    {
      icon: 'calendar',
      number: '2007',
      title: 'Год основания',
    },
    {
      icon: 'build',
      number: '400+',
      title: 'Различных конструкций',
    },
    {
      icon: 'region',
      number: '60',
      title: 'Населенных пунктов присутствия',
    },
  ],
  border,
  theme = 'fact',
  ...rest
} = Astro.props
---

<Section
  heading={heading}
  class="circles"
  paddingTop={'full'}
  paddingBottom={'normal'}
  whiteBackground
  border={border}
  data-theme={theme}
  {...rest}
>
  <div class="circles__list hidden-scrollbar">
    {
      list.map((fact) => {
        return (
          <CircleData
            {...fact}
            {theme}
          />
        )
      })
    }
  </div>
</Section>

<style is:global>
  .circles {
  }

  .circles__list {
    display: flex;
    flex-wrap: wrap;
    gap: 4.9rem;

    @media (min-width: 769px) {
      .circles[data-theme='asset'] & {
        gap: 5.06rem;
      }
    }

    @media (max-width: 768px) {
      margin-left: calc(var(--screen-horisontal-padding) * -1);
      width: calc(100% + var(--screen-horisontal-padding) * 2);
      padding: 0 var(--screen-horisontal-padding);

      flex-wrap: nowrap;
      gap: 2rem;

      overflow: auto hidden;

      .circle-data {
        flex-shrink: 0;
      }
    }
  }
</style>
