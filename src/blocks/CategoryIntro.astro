---
import type { ImageDataProps } from '@elements/Image.astro'
import Breadcrumbs, {
  type Props as BreadcrumbsProps,
} from './Breadcrumbs.astro'
import TitleValueStat, {
  type Props as TitleValueStatProps,
} from '@elements/TitleValueStat.astro'
import Button from '@elements/Button.astro'
import Image from '@elements/Image.astro'

export interface Props {
  image?: ImageDataProps
  breadcrumbs?: BreadcrumbsProps['links']
  heading?: string
  stats?: Array<TitleValueStatProps>
}

const {
  image = { src: '/images/categories/intro.jpg' },
  breadcrumbs = [
    { name: 'Главная', href: '/' },
    { name: 'Каталог', href: '/catalog' },
    { name: 'Категория', href: '/catalog/category' },
  ],
  heading = 'Металлические заборы под&nbsp;ключ в&nbsp;Санкт-Петербурге',
  stats = [
    { title: 'Среднее время изготовления', value: '7-14 дней' },
    { title: 'Заказов реализуем ежемесячно', value: '550+ заказов' },
    { title: 'Довольных клиентов', value: '9 000+ клиентов' },
  ],
} = Astro.props
---

<!-- BLOCK -->
<div class="category-intro">
  <div class="category-intro__content">
    <Image
      class="category-intro__image"
      {...image}
      lazy
      lazyBackground
      cover
    />
    <Breadcrumbs
      class="category-intro__breadcrubms"
      links={breadcrumbs}
      theme={'light'}
    />
    <h1
      class="category-intro__heading f-d-title-medium-76 f-m-title-medium-30"
      set:html={heading}
    />
    <Button
      href="/installment"
      class="category-intro__installment"
      name="Рассрочка на 12 месяцев"
    />
    <div class="category-intro__stats">
      {
        stats.map((stat) => {
          return (
            <TitleValueStat
              class="category-intro__stat"
              {...stat}
            />
          )
        })
      }
    </div>
  </div>
</div>

<style is:global>
  .category-intro {
    --padding: calc(var(--screen-horisontal-padding) * 0.76);
    padding: 2.5rem var(--padding) var(--section-vertical-padding)
      var(--padding);
    padding-bottom: 0;

    @media (max-width: 768px) {
      padding: 0;
      margin-top: calc(var(--header-height) * -1);
    }
  }

  .category-intro__content {
    position: relative;
    z-index: 1;

    display: flex;
    flex-direction: column;

    height: 65rem;
    padding: 4rem 4.9rem 5rem 4.9rem;

    border-radius: var(--border-radius);

    color: var(--color-grayscale-0);

    overflow: hidden;

    @media (max-width: 768px) {
      height: 60.5rem;
      border-radius: 0;
      padding: 0 var(--screen-horisontal-padding);
      padding-top: calc(var(--header-height) + 2rem);
    }

    @media (max-width: 768px) and (max-aspect-ratio: 0.6) {
      height: var(--viewport-height);
      padding-bottom: 5.5rem;
    }
  }

  .category-intro__image {
    position: absolute;
    top: 0;
    left: 0;

    z-index: -1;

    width: 100%;
    height: 100%;
    overflow: hidden;

    filter: blur(0.2rem);

    @media (max-width: 768px) {
      width: 102%;
      left: -1%;
    }
  }

  .category-intro__breadcrubms {
    padding: 0;
    margin-bottom: 4rem;

    @media (max-width: 768px) {
      margin-bottom: 2rem;
    }
  }

  .category-intro__heading {
    margin-bottom: 5rem;

    width: 107rem;

    @media (max-width: 768px) {
      margin-bottom: 4rem;
      width: 100%;
    }
  }

  .category-intro__installment {
    width: max-content;
  }

  .category-intro__stats {
    display: flex;
    gap: 9rem;

    @media (min-width: 769px) {
      margin-top: auto;
    }

    @media (max-width: 768px) {
      flex-direction: column;
      gap: 4rem;

      margin-top: 4.6rem;
    }

    @media (max-width: 768px) and (max-aspect-ratio: 0.6) {
      margin-top: auto;
    }
  }

  .category-intro__stat {
  }
</style>
