---
import Section, { type Props as SectionProps } from '@blocks/Section.astro'
import SliderBullets from '@elements/SliderBullets.astro'
import SliderButton from '@elements/SliderButton.astro'

export interface Props extends SectionProps {
  class?: string
  itemInView?: '2' | '3' | '4' | 2 | 3 | 4
}

const { class: className, itemInView = 3, ...rest } = Astro.props
---

<Section
  class={`slider-section ${className || ''}`}
  data-items-in-view={itemInView}
  {...rest}
>
  <e-scroll class="slider-section__slider bullets">
    <slot />
    <SliderButton
      type={'prev'}
      center
    />
    <SliderButton
      type={'next'}
      center
    />
    <SliderBullets />
  </e-scroll>
</Section>

<style is:global>
  .slider-section__slider {
    --axis: x;
    --gap: 5rem;
    --overflow: hidden;
    --sectional: true;

    --auto-size: true;

    display: flex;
    gap: var(--gap);

    .slider-section[data-items-in-view='2'] & {
      --sections-in-view: 2;
    }

    .slider-section[data-items-in-view='3'] & {
      --sections-in-view: 3;
    }

    .slider-section[data-items-in-view='4'] & {
      --sections-in-view: 4;
    }

    @media (max-width: 768px) {
      --overflow: unset;
      --gap: 2rem;

      .slider-section[data-items-in-view='2'] &,
      .slider-section[data-items-in-view='3'] & {
        --sections-in-view: var(--slider-mobile-sections-in-view);
      }

      .slider-section[data-items-in-view='4'] & {
        --sections-in-view: 1.6;
      }
    }
  }
</style>
